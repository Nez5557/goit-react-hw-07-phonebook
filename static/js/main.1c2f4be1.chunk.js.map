{"version":3,"sources":["Components/Form/styles.module.css","Components/ContactsList/ListItem/styles.module.css","Components/ContactsList/styles.module.css","Components/Filter/styles.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","redux/store.js","redux/contacts/contacts-selector.js","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactsList/ListItem/ListItem.js","App.js","index.js"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","postContact","createAsyncThunk","a","name","number","rejectWithValue","contact","post","then","responce","data","fetchContacts","_","get","deleteContact","id","delete","contactsReducer","createReducer","fulfilled","state","payload","newContacts","filter","item","console","log","filterReducer","action","loaderReducer","pending","rejected","errorReducer","contacts","combineReducers","loader","error","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","getContacts","getFilter","getLoader","getFilteredContacts","createSelector","filterValue","toLowerCase","includes","ConctactsList","children","useSelector","className","styles","contactsList","Form","useState","setName","setNumber","dispatch","useDispatch","inputHandler","evt","target","value","formReset","IdName","shortid","generate","IdNumber","onSubmit","preventDefault","map","find","alert","formLabel","htmlFor","type","pattern","title","onChange","required","submitBtn","Filter","inputId","filterLabel","e","ListItem","useEffect","listItem","itemText","deleteBtn","onClick","connect","ContactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c2f4be1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"styles_submitBtn__2vrDA\",\"formLabel\":\"styles_formLabel__2R2E8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"styles_listItem__1DSq-\",\"itemText\":\"styles_itemText__38RwM\",\"deleteBtn\":\"styles_deleteBtn__2vt6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"styles_contactsList__1UFGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"styles_filterLabel__3CkEE\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('filter/change');\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\naxios.defaults.baseURL = 'http://localhost:4041';\r\n\r\nexport const postContact = createAsyncThunk('contacts/addContact',\r\n    async ({ name, number }, {rejectWithValue}) => {\r\n        try {\r\n            const contact = {\r\n            name: name,\r\n            number: number,\r\n        };\r\n        const responce = await axios.post('/contacts', contact)\r\n            .then(responce => responce.data);\r\n        return responce\r\n        } catch (error) {\r\n            return rejectWithValue(error)\r\n        };\r\n    });\r\n\r\nexport const fetchContacts = createAsyncThunk('contacts/getContacts',\r\n    async (_, {rejectWithValue}) => {\r\n        try {\r\n        const responce = await axios.get('/contacts')\r\n            .then(responce => responce.data);\r\n        return responce\r\n        } catch (error) {\r\n            return rejectWithValue(error)\r\n        };\r\n    });\r\n\r\nexport const deleteContact = createAsyncThunk('contacts/deleteContact',\r\n    async (id, {rejectWithValue}) => {\r\n        try {\r\n            await axios.delete(`/contacts/${id}`);\r\n            return id;\r\n        } catch (error) {\r\n            return rejectWithValue(error)\r\n        };\r\n    });","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nimport { postContact, fetchContacts, deleteContact } from './contacts-operations';\r\n\r\nconst contactsReducer = createReducer([], {\r\n    [postContact.fulfilled]: (state, { payload }) =>  [...state, payload],\r\n    [fetchContacts.fulfilled]: (_, { payload }) => [...payload],\r\n\r\n    [deleteContact.fulfilled]: (state, { payload }) => {\r\n        const newContacts = state.filter((item) => item.id !== payload);\r\n        console.log(newContacts, 'new contacts')\r\n        return newContacts;\r\n    },\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n    [changeFilter]: (_, action) => action.payload\r\n});\r\n\r\nconst loaderReducer = createReducer(false, {\r\n    [postContact.pending]: () => true,\r\n    [postContact.fulfilled]: () => false,\r\n    [postContact.rejected]: () => false,\r\n\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n    \r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n    [postContact.rejected]: (_, { payload }) => payload,\r\n    [fetchContacts.rejected]: (_, { payload }) => payload,\r\n    [deleteContact.rejected]: (_, { payload }) => payload,\r\n    [postContact.pending]: null,\r\n    [fetchContacts.pending]: null,\r\n    [deleteContact.pending]: null\r\n})\r\n\r\nexport const contacts = combineReducers({\r\n    contacts: contactsReducer,\r\n    filter: filterReducer,\r\n    loader: loaderReducer,\r\n    error: errorReducer,\r\n})\r\n","import { configureStore} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport { contacts } from './contacts/contacts-reducers';\r\n\r\nconst store = configureStore({\r\n    reducer: contacts,\r\n    middleware: (getDefaultMiddleware) => [...getDefaultMiddleware(), logger],\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport { store };\r\n\r\n\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\n// const persistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// };\r\n\r\n\r\n// const mainReducer = combineReducers({\r\n//     contacts: contactsReducer,\r\n//     filter: filterReducer,\r\n//     loader: loaderReducer\r\n// });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, mainReducer);\r\n\r\n// const store = configureStore({\r\n//     reducer: persistedReducer,\r\n//     middleware: (getDefaultMiddleware) => [...getDefaultMiddleware(\r\n//         { serializableCheck: { ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER] } }\r\n//     ), logger],\r\n//     devTools: process.env.NODE_ENV !== 'production',\r\n// });\r\n\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export  { store, persistor };\r\n\r\n\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => state.contacts;\r\nexport const getFilter = (state) => state.filter;\r\nexport const getLoader = (state) => state.loader;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getFilter, getContacts],\r\n    (filterValue, contacts) => {\r\n        return contacts.filter((item) =>\r\n            item.name.toLowerCase().includes(filterValue.toLowerCase()));\r\n    }\r\n);","import PropTypes from \"prop-types\";\r\nimport styles from \"./styles.module.css\";\r\nimport { getLoader } from \"redux/contacts/contacts-selector\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ConctactsList({ children }) {\r\n  const loader = useSelector(getLoader);\r\n  \r\n  return (\r\n    <ul className={styles.contactsList}>\r\n      {loader && <h4>Loading...</h4>}\r\n      {children}\r\n    </ul>\r\n  );\r\n}\r\n\r\nConctactsList.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ConctactsList;\r\n","// import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { getContacts } from \"redux/contacts/contacts-selector\";\r\nimport { postContact } from \"redux/contacts/contacts-operations\";\r\n\r\nimport shortid from \"shortid\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputHandler = (evt) => {\r\n    switch (evt.target.name) {\r\n\r\n      case \"name\":\r\n        setName(evt.target.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(evt.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const submitHanlder = (evt) => {\r\n    evt.preventDefault();\r\n    const namesToLowerCase = contacts.map((item) => item.name.toLowerCase());\r\n\r\n// проверка на повторение имени\r\n    if (namesToLowerCase.find((item) => item === name.toLowerCase())) {\r\n      alert(\"please change name\");\r\n      setName('');\r\n      return \r\n    };\r\n// отправка и создание нового контакта\r\n    const contact = {\r\n      name: name,\r\n      number: number,\r\n    };\r\n    dispatch(postContact(contact));\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const IdName = shortid.generate();\r\n  const IdNumber = shortid.generate();\r\n  return (\r\n    <form onSubmit={submitHanlder}>\r\n      <label className={styles.formLabel} htmlFor={IdName}>\r\n        Name\r\n        <input\r\n          id={IdName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={inputHandler}\r\n          value={name}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.formLabel} htmlFor={IdNumber}>\r\n        Number\r\n        <input\r\n          id={IdNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={inputHandler}\r\n          value={number}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.submitBtn} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","// import PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeFilter } from 'redux/contacts/contacts-actions';\r\nimport { getFilter } from 'redux/contacts/contacts-selector'\r\n\r\nimport shortid from \"shortid\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction Filter() {\r\n  const filterValue = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  \r\n  const inputId = shortid.generate();\r\n  return (\r\n    <label className={styles.filterLabel} htmlFor={inputId}>\r\n      Search\r\n      <input\r\n        id={inputId}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filterValue}\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// import PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilteredContacts } from \"redux/contacts/contacts-selector\";\r\nimport { fetchContacts, deleteContact } from \"redux/contacts/contacts-operations\";\r\n\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction ListItem() {\r\n  const contacts = useSelector(getFilteredContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts())\r\n  }, [dispatch]);\r\n\r\n  return contacts.map((item) => console.log('kek') || (\r\n    <li className={styles.listItem} key={item.id}>\r\n      <p className={styles.itemText}>\r\n        {item.name}: {item.number}\r\n      </p>\r\n      <button\r\n        className={styles.deleteBtn}\r\n        type=\"button\"\r\n        onClick={() => dispatch(deleteContact(item.id))}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  ));\r\n};\r\n\r\n\r\nexport default ListItem;\r\n","import { connect } from \"react-redux\";\r\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\r\nimport Form from \"./Components/Form\";\r\nimport Filter from \"./Components/Filter\";\r\nimport ListItem from \"./Components/ContactsList/ListItem\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Form />\r\n      <Filter />\r\n      <ContactsList>\r\n        <ListItem  />\r\n      </ContactsList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null)(App);\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './redux/store';\r\nimport \"modern-normalize\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n// import {store, persistor} from './redux/store';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}> */}\r\n        <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}